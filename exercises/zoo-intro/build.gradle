plugins {
  id 'application'
  id 'java'
  id 'com.adarshr.test-logger' version '2.1.1'
  id 'distribution'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

application {
  //mainClass = 'exercise.recipes.GroupMemberRecipe'
  //mainClass = 'exercise.recipes.TreeCacheRecipe'
  mainClass = 'exercise.recipes.CachedNode'
}

dependencies {
  // logback
  implementation 'ch.qos.logback:logback-classic:1.2.11'
  implementation 'ch.qos.logback:logback-core:1.2.11'
  implementation 'org.slf4j:slf4j-api:1.7.36'

  //ZooKeeper & Curator
  implementation 'org.apache.curator:curator-framework:2.12.0' // c zookeeper v.3.5.9 корректно работает curator 2.12
  implementation 'org.apache.curator:curator-recipes:2.12.0'

  //compile fileTree(dir: 'libs', include: ['*.jar'])
//  compile fileTree(dir: 'src/main/resources', include: ['*.xml'])

//  runtimeOnly 'org.postgresql:postgresql:42.2.1'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0-M1'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.0-M1'
  testImplementation 'org.assertj:assertj-core:3.19.0'
}

test {
  useJUnitPlatform()
}

tasks.startScripts {
  doLast {
    def scriptFile = file "${outputDir}/${applicationName}"
    scriptFile.text = scriptFile.text.replace('CLASSPATH=$APP_HOME/lib', 'CLASSPATH=$APP_HOME/conf/:$APP_HOME/lib')
  }
}

task copyResources(type: Copy) {
  from 'src/main/resources'
  into 'build/install/app/conf' // папка будет создана, если не существует
}

//copyResources.mustRunAfter(installDist)
/*
installDist.configure {
  dependsOn copyResources
}*/
